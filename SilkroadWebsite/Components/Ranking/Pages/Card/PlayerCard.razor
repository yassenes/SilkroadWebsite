@page "/ranking/player/{CharName}"
@using Microsoft.Extensions.Caching.Memory
@using SilkroadWebsite.Components
@using Microsoft.EntityFrameworkCore
@using SilkroadWebsite.Components.Layout
@using SilkroadWebsite.Data.Model.Inventory
@using SilkroadWebsite.Data.Model.Ranking
@using SilkroadWebsite.Data.Model.Shard
@inject Data.ApplicationDbContext Data
@inject Data.ShardDbContext Shard
@inject NavigationManager Navigation
@inject IMemoryCache Cache

<Breadcrumb PageTitle="@CharName" BackgroundImage="/image/slider/2.jpg" />

<div class="subpage-content">
    <div class="container ranking-section py-5">
        <h2 class="text-center mb-4">Player Details</h2>
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10">
                <div class="player-card">
                    <div class="player-header">
                        <img src="@GetCharImagePath()" alt="@CharName" class="player-image" />
                        <div class="player-info">
                            <h1>@CharName</h1>
                            <span class="item-points">Item Points: @player?.ItemPoints</span>
                        </div>
                    </div>

                    <div class="player-details">
                        <div class="info-stats-container">
                            <div class="info-section">
                                <h2>Info</h2>
                                <p><strong>Nickname:</strong> @charEntity?.NickName16</p>
                                <span><strong>Guild:</strong></span> <span class="guild-name" @onclick="() => NavigateToGuildPage(player?.Guild)"> @player?.Guild</span>
                                <p><strong>Level:</strong> @player?.Level</p>
                                <p><strong>Race:</strong> <img src="@GetRaceImgPath()" alt="Race" class="race-icon" /> @GetRace()</p>
                            </div>

                            <div class="stats-section">
                                <h2>Stats</h2>
                                <p><strong>Force (STR):</strong> <img src="/image/info/plus_button.png" alt="STR" class="icon" /> @charEntity?.Strength</p>
                                <p><strong>Mind Power (INT):</strong> <img src="/image/info/plus_button.png" alt="INT" class="icon" /> @charEntity?.Intellect</p>
                                <p><strong>HP (Health):</strong> <img src="/image/info/item_hp_potion.png" alt="HP" class="icon" /> @charEntity?.HP</p>
                                <p><strong>MP (Mana):</strong> <img src="/image/info/item_mp_potion.png" alt="MP" class="icon" /> @charEntity?.MP</p>
                            </div>
                        </div>
                    </div>

                    <div class="inventory-section">
                        <h2>Inventory</h2>
                        <div class="inventory-grid">
                            @foreach (var item in Items)
                            {
                                <ItemCard Item="item" />
                            }
                        </div>
                    </div>

                    <div class="log-section">
                        <h2>Player Log</h2>
                        <button class="btn btn-warning" onclick="onLogClick('Global Chat', 'warning')">Global Chat</button>
                        <button class="btn btn-danger" onclick="onLogClick('Unique Kills', 'danger')">Unique Kills</button>
                        <button class="btn btn-light" onclick="onLogClick('PVP Kills', 'light')">PVP Kills</button>
                        <button class="btn btn-success" onclick="onLogClick('Job Kills', 'success')">Job Kills</button>
                        <div id="event-console"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? CharName { get; set; }
    private PlayerEntity? player;
    private SR_Char? charEntity;

    private void NavigateToPlayerPage(string charName) => Navigation.NavigateTo($"/ranking/player/{charName}");
    private void NavigateToGuildPage(string charName) => Navigation.NavigateTo($"/ranking/guild/{charName}");

    private static readonly List<Item> Items = new()
                        {
                            new Item
                            {
                                Id = 1,
                                Name = "Sword of XiaoLing",
                                Description = "A legendary blade forged in ancient flames.",
                                ImageUrl = "/image/sro/item/china/sword_01.jpg",
                                Rarity = "Legendary",
                                ItemType = "Weapon",
                                Power = 100,
                                Defense = 10,
                                Speed = 20,
                                CriticalChance = 15,
                                Durability = 500,
                                LevelRequirement = 30,
                                MagicResistance = 5,
                                HealthBonus = 50,
                                ManaBonus = 20,
                                MagicPower = 30,
                                BlueMagicDamage = 25,
                                MagicCooldownReduction = 10
                            },
                            new Item
                            {
                                Id = 2,
                                Name = "Shield of Eternity",
                                Description = "Blocks all incoming attacks with divine power.",
                                ImageUrl = "/image/sro/item/china/bow_03.jpg",
                                Rarity = "Epic",
                                ItemType = "Armor",
                                Power = 20,
                                Defense = 80,
                                Speed = 5,
                                CriticalChance = 5,
                                Durability = 1000,
                                LevelRequirement = 25,
                                MagicResistance = 30,
                                HealthBonus = 100,
                                ManaBonus = 10,
                                MagicPower = 0,
                                BlueMagicDamage = 0,
                                MagicCooldownReduction = 0
                            }
                        };

    protected override async Task OnInitializedAsync()
    {
        player = await Cache.GetOrCreateAsync($"Player_{CharName}", async entry =>
        {
            entry.AbsoluteExpirationRelativeToNow = TimeSpan.FromMinutes(5);
            return await Data._Ranking_Player.FirstOrDefaultAsync(o => o.CharName == CharName);
        });

        charEntity = await Cache.GetOrCreateAsync($"CharEntity_{CharName}", async entry =>
        {
            entry.AbsoluteExpirationRelativeToNow = TimeSpan.FromMinutes(5);
            return await Shard._Char.FirstOrDefaultAsync(x => x.CharName16 == CharName);
        });
    }

    public string GetCharImagePath()
    {
        int refobjid = charEntity?.RefObjID ?? 0;
        return $"image/sro/chars/{refobjid}.gif";
    }

    public string GetRaceImgPath()
    {
        int refobjid = charEntity?.RefObjID ?? 0;

        string race = refobjid >= 14875 ? "eu" : "ch";

        return $"image/info/{race}.png";
    }

    public string GetRace()
    {
        int refobjid = charEntity?.RefObjID ?? 0;

        return refobjid >= 14875 ? "Europe" : "Chinese";
    }
}