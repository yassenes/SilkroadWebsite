@page "/ranking/guild"
@using SilkroadWebsite.Data.Model.Ranking
@using SilkroadWebsite.Components.Ranking.Pages.Card

@inject Data.ApplicationDbContext Data
@inject Data.ShardDbContext Shard
@inject DialogService DialogService

@attribute [StreamRendering]

<RankingView/>

@if (itemsQueryable != null)
{
    <table class="data-grid">
        <thead>
            <tr>
                <th style="width: 80px; text-align: center;">#</th>
                <th>Guild</th>
                <th>Members Count</th>
                <th>Level</th>
                <th>Guild Points</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var guild in itemsList)
            {
                <tr>
                    <td style="text-align: center;">@(itemsList.IndexOf(guild) + 1)</td>
                    <td>
                        <div class="guild-info">
                            <span class="guild-name">@guild.Name</span>
                            <button class="view-button" @onclick="() => ViewGuild(guild.Name)">View</button>
                        </div>
                    </td>
                    <td>@guild.MemberCount</td>
                    <td>@guild.Level</td>
                    <td>@guild.GuildPoints</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p><em>Loading...</em></p>
}

<style>
    .data-grid {
        width: 100%;
        border-collapse: collapse;
    }

    .data-grid th, .data-grid td {
        border: 1px solid #ddd;
        padding: 8px;
    }

    .data-grid th {
        background-color: #f4f4f4;
        text-align: left;
    }

    .guild-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .guild-name {
        font-weight: bold;
    }

    .view-button {
        background-color: #17a2b8;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 4px;
    }

    .view-button:hover {
        background-color: #138496;
    }
</style>

@code {
    List<GuildEntity> itemsList;
    IQueryable<GuildEntity> itemsQueryable;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        itemsQueryable = Data._Ranking_Guild.OrderByDescending(p => p.GuildPoints).AsQueryable();
        itemsList = itemsQueryable.ToList();
    }

    async Task ViewGuild(string guildname)
    {
        await DialogService.OpenAsync<GuildCard>($"Guild {guildname}",
                            new Dictionary<string, object>() { { "GuildName", guildname } },
                            new DialogOptions() { Width = "700px", Height = "600px" });
    }
}
